//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.05.18 at 02:21:55 PM BST 
//


package com.trax.europeangateway.model.dto.xsd.omega;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for mifirUnderlying complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="mifirUnderlying">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="underlyingInstrument" type="{http://deutsche-boerse.com/DBRegHub}mifirUnderlyingInstrument"/>
 *         &lt;element name="underlyingIndex" type="{http://deutsche-boerse.com/DBRegHub}mifirUnderlyingIndex"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "mifirUnderlying", propOrder = {
    "underlyingInstrument",
    "underlyingIndex"
})
public class MifirUnderlying {

    protected MifirUnderlyingInstrument underlyingInstrument;
    protected MifirUnderlyingIndex underlyingIndex;

    /**
     * Gets the value of the underlyingInstrument property.
     * 
     * @return
     *     possible object is
     *     {@link MifirUnderlyingInstrument }
     *     
     */
    public MifirUnderlyingInstrument getUnderlyingInstrument() {
        return underlyingInstrument;
    }

    /**
     * Sets the value of the underlyingInstrument property.
     * 
     * @param value
     *     allowed object is
     *     {@link MifirUnderlyingInstrument }
     *     
     */
    public void setUnderlyingInstrument(MifirUnderlyingInstrument value) {
        this.underlyingInstrument = value;
    }

    /**
     * Gets the value of the underlyingIndex property.
     * 
     * @return
     *     possible object is
     *     {@link MifirUnderlyingIndex }
     *     
     */
    public MifirUnderlyingIndex getUnderlyingIndex() {
        return underlyingIndex;
    }

    /**
     * Sets the value of the underlyingIndex property.
     * 
     * @param value
     *     allowed object is
     *     {@link MifirUnderlyingIndex }
     *     
     */
    public void setUnderlyingIndex(MifirUnderlyingIndex value) {
        this.underlyingIndex = value;
    }

}
